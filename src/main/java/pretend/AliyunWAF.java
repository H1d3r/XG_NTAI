package pretend;

public class AliyunWAF {
    private static String Html;
    private static String Code;

    public static String GetHtml(){

        Html = "";
        return Html;
    }
    public static String getCode(){
        Code = "405";
        return Code;
    }

}
